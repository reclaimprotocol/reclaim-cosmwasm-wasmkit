{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "verify_proof"
      ],
      "properties": {
        "verify_proof": {
          "$ref": "#/definitions/ProofMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_epoch"
      ],
      "properties": {
        "add_epoch": {
          "type": "object",
          "required": [
            "minimum_witness",
            "witness"
          ],
          "properties": {
            "minimum_witness": {
              "$ref": "#/definitions/Uint128"
            },
            "witness": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Witness"
              }
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ClaimInfo": {
      "type": "object",
      "required": [
        "context",
        "parameters",
        "provider"
      ],
      "properties": {
        "context": {
          "type": "string"
        },
        "parameters": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "CompleteClaimData": {
      "type": "object",
      "required": [
        "epoch",
        "identifier",
        "owner",
        "timestampS"
      ],
      "properties": {
        "epoch": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "identifier": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "timestampS": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Proof": {
      "type": "object",
      "required": [
        "claimInfo",
        "signedClaim"
      ],
      "properties": {
        "claimInfo": {
          "$ref": "#/definitions/ClaimInfo"
        },
        "signedClaim": {
          "$ref": "#/definitions/SignedClaim"
        }
      }
    },
    "ProofMsg": {
      "type": "object",
      "required": [
        "proof"
      ],
      "properties": {
        "proof": {
          "$ref": "#/definitions/Proof"
        }
      }
    },
    "SignedClaim": {
      "type": "object",
      "required": [
        "claim",
        "signatures"
      ],
      "properties": {
        "claim": {
          "$ref": "#/definitions/CompleteClaimData"
        },
        "signatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Witness": {
      "type": "object",
      "required": [
        "address",
        "host"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      }
    }
  }
}
